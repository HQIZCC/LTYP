<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.vworld.mapper.UserMapper">
    <select id="findUserByU_P" resultMap="userRM">
        select u.*,r.* from
(select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
where username=#{username} and password = #{password}
    </select>
    <select id="findUserByU_P_simple" resultType="User">
        select * from user
        where username=#{username} and password=#{password}
    </select>

    <resultMap id="userRM" type="User" autoMapping="true">
        <id property="userId" column="user_id"/>
        <association property="userInfo" javaType="UserInfo" resultMap="userInfoRM">

        </association>
        <association property="role" javaType="Role">
            <id property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
        </association>
    </resultMap>

    <resultMap id="userInfoRM" type="UserInfo" autoMapping="true">
        <id property="userInfoId" column="user_info_id"/>
    </resultMap>

    <insert id="saveUser">
        insert into user (
        <if test="username!=null">username,</if>
        <if test="password!=null">password,</if>
        <if test="state!=null">state,</if>
        <if test="ban!=null">ban,</if>
        <if test="createTime!=null">create_time,</if>
        <if test="updateTime!=null">update_time,</if>
        <if test="userId!=null">user_id</if>

        ) values (
        <if test="username!=null">#{username},</if>
        <if test="password!=null">#{password},</if>
        <if test="state!=null">#{state},</if>
        <if test="ban!=null">#{ban},</if>
        <if test="createTime!=null">#{createTime},</if>
        <if test="updateTime!=null">#{updateTime},</if>
        <if test="userId!=null">#{userId}</if>
        )
    </insert>

    <update id="updatePassword">
        update user set password = #{password} where user_id = #{userId}
    </update>

    <select id="findUserByEmail" resultMap="userRM">
        select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
          ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where u.email = #{email}
    </select>
    <!--显示全部用户，不包括管理员-->
    <select id="findAllUser" resultMap="userRM">
         select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
          ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where r.role_name = "用户" limit #{showpage}, #{lines}
    </select>

    <select id="findUserByUsername" resultMap="userRM">
        select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
        ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where r.role_name = "用户" and u.username like "%"#{username}"%" limit #{showpage},#{lines}
    </select>
    <!--显示全部管理员-->
    <select id="findAllAdmin" resultMap="userRM">
         select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
        ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where not r.role_name = "用户"
    </select>
    <!--删除管理员-->
    <delete id="deleteAdmin">
        delete from user where user_id = #{userId}
    </delete>
    <!--删除管理员角色关联表-->
    <delete id="deleteAdminRole">
        delete from role_user where user_id = #{userId}
    </delete>
    <!--查询用户详情-->
    <select id="findUserByUserId" resultMap="userRM">
        select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
        ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where u.user_id = #{userId}
    </select>
    <!--查询用户喜欢的电影类型-->
    <select id="findUserType" resultType="Type">
        select t.type_id,t.type_name from
        type t left join user_type u on u.type_id = t.type_id
        where u.user_id = #{userId}
    </select>
    <!--删除用户-电影类型关联表数据-->
    <delete id="deleteUserTypes">
        delete from user_type where user_id = #{userId}
    </delete>
    <!--添加用户-电影类型关联表数据-->
    <insert id="saveUserType">
        insert into user_type values(#{userId}, #{typeId})
    </insert>
    <!--修改用户信息-->
    <select id="checkUsername" resultMap="userRM">
        select u.*,r.* from
    (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
    ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
    left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where username=#{username} or u.email=#{username}
    </select>


    <!--封号/解封-->
    <update id="updateBan">
        update user set ban = #{ban} where user_id = #{userId}
    </update>
    <!--添加职位-->
    <insert id="saveUserRole">
        insert into role_user values (#{userId}, #{roleId});
    </insert>

    <!--邮箱激活修改状态-->
    <update id="updateState">
        update user set state = 1 where user_id = #{userId}
    </update>

    <select id="findUserNumByKey" resultType="Integer">
        select count(*) from user where username like "%"#{key}"%"
    </select>

    <select id="findAllUserNum" resultType="Integer">
      select count(*) from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
          ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id) u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where r.role_name = "用户"
    </select>



    <select id="downLoadFilmList" resultType="MovieInfo">
        select movie_name,show_time,country,avgscore from ${tableType}
    </select>




    <select id="downLoadUserList" resultType="User">
        select user_id,username,state,create_time, update_time
        from ${tableType}
    </select>



    <!--根据邮箱来查询是否有这个User-->
    <select id="checkEmailExist" resultMap="userRM">
        select u.*,r.* from
        (select u.user_id,u.username,u.password,u.state,u.ban,ui.age,ui.email,ui.gender,
        ui.hpic,ui.name,ui.nickname,ui.phone,ui.sign from user u left join user_info ui on u.user_id = ui.user_info_id)
        u
        left join role_user ru on u.user_id = ru.user_id left join role r on ru.role_id = r.role_id
        where email=#{email}
    </select>

</mapper>
